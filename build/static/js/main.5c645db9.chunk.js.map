{"version":3,"sources":["assets/root_img/Modal/BtnClose.svg","components/classroom/ClassroomFooter.js","contexts/TextbookContext.js","components/textbooks/TextbookOutline.js","contexts/ImageContext.js","helpers/electronFileSystem.js","components/textbooks/TextbookSidebar.js","config.js","components/textbooks/DisplayImage.js","components/textbooks/Editor.js","components/textbooks/CustomToolbar.js","components/Button.js","components/textbooks/Field.js","components/textbooks/CodeLanguageSelectBox.js","components/textbooks/ImageContent.js","components/Modal.js","components/textbooks/TextbookContentView.js","components/classroom/index.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","ClassroomFooter","maxIndex","stepIndicator","setStepIndicator","progressBarRef","useRef","handleIndicator","index","useEffect","current","style","width","progress","Math","round","className","ref","onClick","TextbookContext","createContext","stepIndex","itemIndex","setIndex","addStep","deleteStep","addItem","TextbookOutline","JSONBook","selectedInfo","useState","hoverStepIndex","setHoverStepIndex","hoverItemIndex","setHoverItemIndex","useContext","deleteItem","stepAddClick","smalltalk","prompt","then","value","console","log","catch","itemAddClick","e","textbook","textbookContents","textbook_contents","map","step_dict","textbookSteps","step_items","step","CurrentIndex","key","title","onMouseEnter","onMouseLeave","step_no","step_title","length","parseTextbook","ImageContext","imageLib","Map","store","window","require","saveTextbook","set","JSON","stringify","loadImage","name","get","TextbookSidebar","studentID","textbookOnClickCallback","onEditFunction","toggleSidebar","isOpen","textbookCompleteCallback","currentTextbook","setJSONBook","lastTextbook","viewType","setViewType","addImageLib","setImageLib","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","onFolderChange","event","a","os","files","target","folders","platform","path","split","binary","parse","loadTextbook","type","onChange","json","content","readAsText","text","document","createElement","Blob","href","URL","createObjectURL","download","body","appendChild","click","remove","directory","webkitdirectory","multiple","location","origin","DisplayImage","props","imgRef","useCallback","img","onImageChange","setSelectedImage","Size","Quill","import","whitelist","register","Font","Editor","modules","toolbar","container","handleChange","placeholder","formats","theme","height","CustomToolbar","complete","changeFolder","idx","id","Button","children","size","color","fullWidth","fullHeight","autoHeight","displayNoneMobile","noRadius","hoverDisabled","outline","circled","active","noWrap","rest","classNames","defaultProps","React","memo","Field","fieldinput","setFieldinput","inputChange","onBlur","autoFocus","rows","cols","onDoubleClick","CodeLanguageSelectBox","setCodeLanguage","options","option","defaultValue","ImageContent","toggle","subHeader","header","parentOverflowDisabled","innerStyle","modalBodyEl","escape","classList","setTimeout","getElementById","removeAttribute","overflow","addEventListener","removeEventListener","textAlign","cursor","src","closeBtn","components_item","count_for_key","selectedImage","ButtonGroup","image","useMemo","undefined","alt","reactHtmlParser","TextbookContentView","data","JSONLoading","setText","code","setCode","codeLanguage","addDescription","addImage","addCode","deleteDescription","addTable","components","description_title","step_item_descriptions","description","rehypePlugins","rehypeRaw","remarkPlugins","gfm","borderWidth","node","inline","match","exec","String","replace","materialLight","language","PreTag","card1","parseData","marginTop","currentTarget","NewClassroom","Textbook","setTextbook","sidebarOpen","setSidebarOpen","stepsList","setStepsList","stepsListLength","setStepsListLength","tutorial","setStepIndex","setItemIndex","useReducer","x","forceUpdate","steps_list","forEach","concat","movePage","stepTitle","newBook","i","splice","itemTitle","new_textbook","prev","textbookContextValue","imageContextValue","Provider","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5c645db9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BtnClose.809be677.svg\";","import React, { useEffect, useRef } from 'react';\nimport \"assets/css/PDFViewer.css\";\n\nconst ClassroomFooter = ({maxIndex, stepIndicator, setStepIndicator}) => {\n    const progressBarRef = useRef(null);\n    \n    const handleIndicator = (index)=>{\n        if (index >=0 && index < maxIndex){\n            setStepIndicator(index);\n        }\n    }\n\n    useEffect(()=>{\n        progressBarRef.current.style.width=\"0%\";\n    },[]);\n\n    useEffect(()=>{\n        if(progressBarRef){\n            let progress = ((stepIndicator+1) / maxIndex) * 100;\n            progressBarRef.current.style.width= Math.round(progress) + \"%\";\n        }\n    },[stepIndicator, maxIndex]);\n    \n    return(\n        <div className=\"classroom-footer\">\n            <div className=\"progress-bar-container\">\n                <div className=\"progress-bar\" ref={progressBarRef}/>\n            </div>\n            <div className=\"nav-bar\">\n                <div className={\"prev-button\" + (stepIndicator===0? \" disabled\" : \"\")} onClick={()=>{handleIndicator(stepIndicator-1)}}>이전</div>\n                <div className=\"offset-container\">{maxIndex? ((stepIndicator + 1) + '/' + maxIndex) : null}</div>\n                <div className={\"next-button\" + (stepIndicator===maxIndex-1? \" disabled\" : \"\")} onClick={()=>{handleIndicator(stepIndicator+1)}}>다음</div>\n            </div>\n        </div>\n    )\n    \n};\n\nexport default ClassroomFooter;\n","import React, { createContext, useMemo, useState } from 'react';\n\nexport const TextbookContext = createContext({\n  stepIndex: 0,\n  itemIndex: 0,\n  setIndex: () => {},\n  addStep: () => {},\n  deleteStep: () => {},\n  addItem: () => {},\n  deleteStep: () => {},\n  addDescription: () => {},\n  addImage: () => {},\n  addCode: () => {},\n  addTable: () => {},\n  deleteDescription: () => {}\n\n});","import React, { useCallback, useEffect, useRef, useState, useContext } from 'react';\nimport 'assets/sass/Curriculum/TextbookOutline.scss'\n// import { Collapse } from 'pages/main/MainPageComponents';\n// import Loader from 'guideComponents/Loader';\nimport { TextbookContext } from 'contexts/TextbookContext';\nimport smalltalk from 'smalltalk';\n\nconst TextbookOutline = ({\n    stepIndicator,\n    setStepIndicator,\n    JSONBook, \n    selectedInfo = null, \n}) =>{\n    const [hoverStepIndex, setHoverStepIndex] = useState(null);\n    const [hoverItemIndex, setHoverItemIndex] = useState(null);\n    const { setIndex, addStep, deleteStep, addItem, deleteItem } = useContext(TextbookContext);\n\n    const stepAddClick = (stepIndex) => {\n      smalltalk\n      .prompt('Question', '스탭 제목을 입력해주세요.', '')\n      .then((value) => {\n          console.log(value);\n          addStep(value, stepIndex+1)\n      })\n      .catch(() => {\n          console.log('cancel');\n      });\n    }\n\n    const itemAddClick = (stepIndex, itemIndex) => {\n      smalltalk\n      .prompt('Question', '아이템 제목을 입력해주세요.', '')\n      .then((value) => {\n          console.log(value);\n          addItem(value, stepIndex, itemIndex + 1)\n      })\n      .catch((e) => {\n          console.log(e)\n      });\n    }\n\n    const parseTextbook = (textbook) =>{\n        let index = -1\n        const textbookContents = textbook.textbook_contents.map((step_dict, stepIndex)=>{\n            const textbookSteps = step_dict.step_items.map((step, itemIndex)=>{\n                index +=1\n                const CurrentIndex = index;\n                if(stepIndicator==CurrentIndex) {\n                  setIndex(stepIndex, itemIndex);\n                }\n                return(\n                    <div key={step.title + CurrentIndex} className={\"textbook-step\" + (stepIndicator==CurrentIndex?\" current\" : \"\")}\n                        onClick={()=>{setStepIndicator(CurrentIndex)}} onMouseEnter={() => {setHoverItemIndex(itemIndex)}} onMouseLeave={() => {setHoverItemIndex(null)}}>\n                        - {step.title}\n                        \n                        {hoverItemIndex === itemIndex && hoverStepIndex === stepIndex &&\n                        <div>\n                          <button onClick={() => {itemAddClick(stepIndex, itemIndex)}}>아이템 추가</button>\n                          <button onClick={() => {deleteItem(stepIndex, itemIndex)}}>아이템 제거</button>\n                        </div>\n                      }\n                    </div>\n                )\n            })\n            return(\n                <>\n                  \n                  <div className=\"textbook-steps\" key={'textbook_steps_'+stepIndex} onMouseEnter={() => {setHoverStepIndex(stepIndex)}} onMouseLeave={() => {setHoverStepIndex(null)}}>\n                      <div className=\"textbook-step-title\"> Step {step_dict.step_no}. {step_dict.step_title}</div>\n                      <div className=\"textbook-step-container\">{textbookSteps}</div>\n                      {hoverStepIndex === stepIndex && !step_dict.step_items.length && <button onClick={() => {itemAddClick(stepIndex, 0)}}>아이템 추가</button>}\n                      {hoverStepIndex === stepIndex && \n                        <div>\n                          <button onClick={() => {stepAddClick(stepIndex)}}>스탭 추가</button>\n                          <button onClick={() => {deleteStep(stepIndex)}}>스탭 제거</button>\n                        </div>\n                      }\n                  </div>\n                </>\n            )\n        })\n        // if (!JSONBook ||  !selectedInfo || !selectedInfo.textbook_order_num){\n        //     return <Loader/>;\n        // }\n        return (\n            <div className = \"textbook-outline\">\n                {/* <div className=\"textbook-description\">\n                    <div className=\"level-description\">{selectedInfo.level_description}</div>\n                    <div className=\"textbook-title\">{selectedInfo?.textbook_order_num?.toString().padStart(2,'0')} {textbook.textbook_content.textbook_title} </div>\n                    <div className=\"textbook-badges\">\n                        <div>{textbook.textbook_content.textbook_subtitle.stage}</div>\n                        <div>{textbook.textbook_content.textbook_subtitle.language}</div>\n                        <div>LV.{textbook.textbook_content.textbook_subtitle.level}</div>\n                    </div>\n                </div> */}\n                <div className=\"textbook-contents\">\n                    {textbookContents}\n                </div>\n            </div>\n        )\n    }\n\n\n    // if (!JSONBook || !selectedInfo){\n    //     return <Loader/>;\n    // }\n    \n    return (\n      <>\n        <div>\n          <button onClick={() => {stepAddClick(-1)}}>스탭 추가</button>\n        </div>\n        {parseTextbook(JSONBook)}\n      </>\n    )\n\n}\n\nexport default TextbookOutline","import React, { createContext } from 'react';\n\nexport const ImageContext = createContext({\n  imageLib: new Map()\n});","import React from 'react';\n//import electron from 'electron';\n\nconst Store = window.require('electron-store');\nconst store = new Store();\n\nexport const saveTextbook = (JSONBook) => {\n  console.log(\"textbook saved!!\")\n  store.set('textbook', JSON.stringify(JSONBook));\n}\n\nexport const saveImage = (name, image) => {\n  try {\n    store.set(name, image);\n    console.log(\"saveImage\", name, \"successful\");\n  } catch (e) {\n    console.log(\"saveImage\", name , \"error\");\n  }\n  \n}\n\nexport const loadTextbook = () => {\n  try {\n    //console.log(JSON.parse(store.get('textbook')));\n    return JSON.parse(store.get('textbook'));\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport const loadImage = (name) => {\n  try {\n    //console.log(store.get(name));\n    return store.get(name);\n  } catch (e) {\n    console.log(name, e);\n    return null;\n  }\n  \n}\n\n// export const saveImage = () => {\n//   let image = new Image();\n//   image.src = \"/Users/eui-chan/Documents/tonysCoding/textbook_editor2/src/textbook/fillRect.png\"\n//   store.set('image', image);\n// }\n\n","import React, { useCallback, useEffect, useReducer, useState, useContext } from 'react';\nimport TextbookBrowser from \"./TextbookBrowser\";\nimport TextbookOutline from \"./TextbookOutline\";\n\nimport { ImageContext } from 'contexts/ImageContext';\n\nimport { saveImage, loadImage, saveTextbook, loadTextbook } from \"helpers/electronFileSystem\";\n// import { useSelector, shallowEqual } from 'react-redux';\n\n// import useApi from 'components/Hooks/useApi';\n\n// import { getTextbookLog, getTextbookIndex } from 'redux/actions/api_textbook';\n// import { getStudentInfo } from 'redux/actions/api_studentinfo';\n// import useGetCodeList from 'components/Hooks/useGetCodeList';\n// import { getTextbook, getCurriculumProgress, getCurriculumIndex } from 'redux/actions/api_textbook';\n// import Loader from 'guideComponents/Loader';\n\nimport 'assets/sass/Curriculum/TextbookSidebar.scss'\n// import useParseCodeToValue from 'components/Hooks/useParseCodeToValue';\n\nconst TextbookSidebar = ({\n    studentID=null, \n    textbookOnClickCallback=null,\n    onEditFunction=null,\n    toggleSidebar=null,\n    isOpen = true,\n    textbookCompleteCallback = null,\n    currentTextbook = null,\n    stepIndicator = 0,\n    setStepIndicator = null,\n    JSONBook = null, \n    setJSONBook = null,\n    lastTextbook = null,\n    }) =>{\n    // const [CurriculumIndexLoading, CurriculumIndex, CurriculumIndexError, getCurriculum] = useApi(getCurriculumIndex);\n    // const [CurriculumProgressLoading, CurriculumProgress, CurriculumProgressError, getCurrentProgress] = useApi(getCurriculumProgress);\n    // const [TextbookIndexLoading, TextbookIndex, TextbookIndexError, getTextbooks] = useApi(getTextbookIndex);\n    // const [CompletedTextbooksLoading, CompletedTextbooks, CompletedTextbooksError, getCompletedTextbooks] = useApi(getTextbookLog);\n    // const [studentInfoLoading, StudentInfo, StudentInfoError, getCurrentStudentInfo] = useApi(getStudentInfo);\n    \n    // const auth = useSelector(state => state.auth, shallowEqual);\n    \n    // const myStudentInfo = useSelector(state=>state.api_studentinfo.studentinfo);\n    // const receivedTextbook = useSelector(state=>state.api_textbook.textbook);\n\n    // const courseLevel = useGetCodeList('course_level');\n\n    const [viewType, setViewType] = useState(0);\n    const [selectedCourseLevel, setSelectedCourseLevel] = useState(\"002\");\n    const [selectedCourseID, setSelectedCourseID] = useState(null);\n    const [selectedTextbookLevel, setSelectedTextbookLevel] = useState(0);\n    const [selectedOrderNum, setSelectedOrderNum] = useState(0);\n\n    const { imageLib, setImageLib, addImageLib } = useContext(ImageContext);\n\n    const downloadJson = () => {\n      const saveText = JSON.stringify(JSONBook, null, \"\\t\");\n\n      // file setting\n      const text = saveText;\n      const name = \"textbook.json\";\n      const type = \"text/plain\";\n  \n      // create file\n      const a = document.createElement(\"a\");\n      const file = new Blob([text], { type: type });\n      a.href = URL.createObjectURL(file);\n      a.download = name;\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n      console.log(JSONBook)\n    }\n\n    const toBase64 = file => new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n  });\n\n    const onFolderChange = async (event) => {\n      const os = window.require('os');\n      let files = event.target.files;\n      for(const file of files) {\n        let folders, name;\n        console.log(\"platform: \",os.platform())\n        if (os.platform() === \"win32\") {\n          folders = file.path.split('\\\\');\n          name = folders[folders.length-2] + \"/\" + folders[folders.length-1];\n        } else {\n          folders = file.path.split('/');\n          name = folders[folders.length-2] + \"/\" + folders[folders.length-1];\n        }\n        //saveImage(name, await toBase64(file));\n        const binary = await toBase64(file);\n        addImageLib(name, binary);\n        console.log(name);\n      }\n    }\n\n    const onJsonChange = (event) => {\n      var reader = new FileReader();\n      let json = event.target.files[0];\n\n      var success = function ( content ) {\n        console.log( JSON.parse(content) ); \n        setJSONBook(JSON.parse(content))\n      }\n      \n      reader.onload = function ( event ) { success( event.target.result ) };\n      reader.readAsText( json );\n\n     // console.log(JSON.parse(reader.result));\n    }\n\n\n    // useEffect(() => {\n    //     getCurriculum();\n    //     if (myStudentInfo){\n    //         getCurrentProgress(auth.user.id);\n    //         getCompletedTextbooks(auth.user.id);\n    //         if(lastTextbook){\n    //             setSelectedOrderNum(lastTextbook.order_num);\n    //             setCurrentLevel(lastTextbook.course, lastTextbook.level)\n    //         }\n    //     }\n    // }, []);\n\n    // useEffect(()=>{\n    //     if (lastTextbook&&CurriculumIndex) {\n    //         setSelectedOrderNum(lastTextbook.order_num);\n    //         setCurrentLevel(lastTextbook.course, lastTextbook.level)\n    //         for (const [code, courses] of Object.entries(CurriculumIndex)) {\n    //             let breaked = false;\n    //             for (const [course_id, course] of Object.entries(courses)) {\n    //                 if (course_id == lastTextbook.course) {\n    //                     setSelectedCourseLevel(code)\n    //                     handleLevelOnClick(course_id, lastTextbook.level)\n    //                     breaked = true;\n    //                     break;\n    //                 }\n    //             }\n    //             if (breaked) break;\n    //         }\n    //     }\n    // },[JSON.stringify(lastTextbook), JSON.stringify(CurriculumIndex)])\n\n    // useEffect(()=>{\n    //     if(studentID){\n    //         getCurrentStudentInfo(studentID);\n    //         getCurrentProgress(studentID);\n    //         getCompletedTextbooks(studentID);\n    //     }\n    // }, [studentID])\n\n    // useEffect(()=>{\n    //     if(CurriculumIndex && receivedTextbook){\n    //         for (const [code, courses] of Object.entries(CurriculumIndex)){\n    //             let breaked = false;\n    //             for (const [course_id, course] of Object.entries(courses)){\n    //                 if (course_id == receivedTextbook.course){\n    //                     setSelectedCourseLevel(code);\n    //                     breaked = true;\n    //                     break;\n    //                 }\n    //             }\n    //             if(breaked){\n    //                 break;\n    //             }\n    //         }\n    //         setSelectedOrderNum(receivedTextbook.order_num);\n    //         setCurrentLevel(receivedTextbook.course, receivedTextbook.level);\n    //         if(viewType !== 2){\n    //             setViewType(2);\n    //         }\n    //     }\n    // },[JSON.stringify(CurriculumIndex), JSON.stringify(receivedTextbook)])\n\n    // useEffect(()=>{\n    //     if(JSONBook){\n    //         setViewType(2);\n    //     }\n    // },[JSON.stringify(JSONBook)])\n\n\n\n    // useEffect(()=>{\n    //     if(CurriculumProgress && CurriculumIndex){\n    //         console.log(\"33333333333333333\", CurriculumProgress, CurriculumIndex)\n    //         let progress_course_id = CurriculumProgress[\"course_id\"];\n    //         if (CurriculumProgress[\"course_id\"] !== 0){\n    //             let breaked = false;\n    //             for (const [code, courses] of Object.entries(CurriculumIndex)){\n    //                 for (const [course_id, course] of Object.entries(courses)){\n    //                     if (course_id == progress_course_id){\n    //                         setSelectedCourseLevel(code);\n    //                         handleLevelOnClick(course_id, CurriculumProgress[\"textbook_level\"]);\n    //                         breaked = true;\n    //                         break;\n    //                     }\n    //                 }\n    //                 if(breaked){\n    //                     break;\n    //                 }\n    //             }\n    //         }\n    //     }\n    // }, [JSON.stringify(CurriculumProgress), JSON.stringify(CurriculumIndex)]);\n\n\n    // const handleLevelOnClick = (course_id, textbook_level) =>{\n    //     setCurrentLevel(course_id, textbook_level);\n    //     setViewType(1);\n    // }\n\n    // const setCurrentLevel = (course_id, textbook_level) =>{\n    //     let courseID = parseInt(course_id);\n    //     let textbookLevel = parseInt(textbook_level);\n    //     let request_data = {\n    //         \"course_id\" : courseID,\n    //         \"textbook_level\" : textbookLevel\n    //     };\n    //     setSelectedCourseID(courseID)\n    //     setSelectedTextbookLevel(textbookLevel)\n    //     getTextbooks(request_data);\n    // }\n\n    // const parseCurriculumIndex = (selectedIndex) =>{\n    //     let to_return = [];\n    //     for (const [course_id, course] of Object.entries(selectedIndex)){\n    //         let course_return = [];\n    //         let course_name = course['name'];\n    //         for (const [textbook_level, value] of Object.entries(course['content'])){\n    //             course_return.push(\n    //                 <div className=\"curriculum-level\" key={course_name + \"_level_\" +textbook_level} onClick={()=>{handleLevelOnClick(course_id,textbook_level)}}>\n    //                     <div className=\"curriculum-level-content\">\n    //                         <div className={\"level-badge badge-\"+textbook_level}>LV.{textbook_level}</div>\n    //                         <div className=\"curriculum-level-description\">{value}</div>\n    //                     </div>\n    //                     <div className=\"curriculum-level-goto\">\n    //                         <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n    //                             <g id=\"expand_more_black_48dp\" transform=\"translate(0 24) rotate(-90)\">\n    //                                 <path id=\"패스_1041\" data-name=\"패스 1041\" d=\"M24,24H0V0H24Z\" fill=\"none\" opacity=\"0.87\"/>\n    //                                 <path id=\"패스_1042\" data-name=\"패스 1042\" d=\"M16.59,8.59,12,13.17,7.41,8.59,6,10l6,6,6-6Z\" fill=\"#757575\"/>\n    //                             </g>\n    //                         </svg>\n    //                     </div>\n    //                 </div>\n    //             );\n    //         }\n    //         to_return.push(\n    //             <div className=\"course-layout\" key={course_name}>\n    //                 <div className=\"course-title\">{course_name}</div>\n    //                 {course_return}\n    //             </div>\n    //         );\n    //     }\n    //     return to_return;\n    // }\n    // const calculateTopIndicator = ()=>{\n    //     if (textbookCompleteCallback){\n    //         return \"open\";\n    //     }\n    //     if (CurriculumProgress){\n    //         if (CurriculumProgress[\"course_level\"] < selectedCourseLevel){\n    //             return 0;\n    //         }\n    //         else if (CurriculumProgress[\"course_level\"] > selectedCourseLevel){\n    //             return \"open\";\n    //         }\n    //         else{\n    //             if (CurriculumProgress[\"course_id\"] == selectedCourseID){\n    //                 if(CurriculumProgress[\"textbook_level\"] > selectedTextbookLevel){\n    //                     return \"open\";\n    //                 }\n    //                 else if (CurriculumProgress[\"textbook_level\"] == selectedTextbookLevel){\n                        \n    //                     if (lastTextbook && lastTextbook.order_num > CurriculumProgress[\"order_indicator\"]) {\n    //                         return lastTextbook.order_num;\n    //                     }\n    //                     return CurriculumProgress[\"order_indicator\"] + 1;\n    //                 }\n    //                 else{\n    //                     return 0;\n    //                 }\n    //             }\n    //             else{\n    //                 return \"open\"\n    //             }\n    //         }\n    //     }\n\n    //     return \"open\";\n    // }\n\n    // const handleOnEdit = (data)=>{\n    //     onEditFunction({\n    //         ...data,\n    //         course_id:selectedCourseID\n    //     })\n    // }\n\n    // const handleTextbookOnClick = (data)=>{\n    //     setSelectedOrderNum(data.order_num);\n    //     textbookOnClickCallback(data);\n    //     if(viewType !== 2){\n    //         setViewType(2);\n    //     }\n    // }\n\n    // const generateTextbookOutlineInfo = () =>{\n    //     if (!selectedCourseLevel || selectedTextbookLevel==null) return null\n    //     let info = {\n    //         level_description:CurriculumIndex[selectedCourseLevel][selectedCourseID]?.content[selectedTextbookLevel],\n    //         textbook_order_num:selectedOrderNum\n    //     };\n    //     return info;\n    // }\n\n    // if (!CurriculumIndex){\n    //     return null;\n    // }\n    console.log(\"isopen\" , isOpen)\n\n\n\n    return (\n        <div className={\"textbook-sidebar\" + (isOpen? \"\" : \" closed\") + (textbookCompleteCallback? \" fixed\" : \"\")}>\n            <span className=\"material-icons-outlined textbook-sidebar-toggle\" onClick={()=>{toggleSidebar(false)}}>\n            close\n            </span>\n            {/* {(myStudentInfo || studentID) && (CurriculumProgressLoading || CurriculumIndexLoading) || viewType === 0? null: */}\n            <div className=\"textbook-prev\" onClick={()=>setViewType(viewType-1)}>\n                <span className=\"textbook-sidebar-back material-icons-outlined\">\n                    west\n                </span>\n            </div>\n            {/* {(myStudentInfo || studentID) && (CurriculumProgressLoading || CurriculumIndexLoading)? <Loader/> : viewType === 0? \n            <div className=\"course-level-container\">\n                <div className=\"course-level-browser\">\n                    {courseLevel.map((level, index) => {\n                        if (level.code >= '003'){\n                            return null;\n                        }\n                        return (\n                            <div className={\"course-badge badge-color\" + (index+1) + (level.code==selectedCourseLevel? \" clicked\" : \"\")} onClick={()=>{setSelectedCourseLevel(level.code)}} key={level.value+\"_\"+level.id} value={level.code}>{level.description}</div>\n                        )\n                    })}\n                </div>\n                <div>\n                    {\n                        parseCurriculumIndex(CurriculumIndex[selectedCourseLevel])\n                    }\n                </div>\n            </div>:\n            viewType === 1?\n            <TextbookBrowser \n                completedTextbooks = {CompletedTextbooks? CompletedTextbooks[\"detail\"] : []} \n                textbookDict = {TextbookIndexLoading? null : TextbookIndex}\n                textbookOnClickCallback = {textbookOnClickCallback? handleTextbookOnClick : null}\n                topOrderIndicator = {calculateTopIndicator()}\n                showTitle={true}\n                textbookCompleteCallback = {textbookCompleteCallback}\n                currentTextbook={currentTextbook || (lastTextbook)}\n                onEditFunction={onEditFunction? handleOnEdit:null}\n            />:\n            viewType === 2?  */}\n            <TextbookOutline stepIndicator={stepIndicator} setStepIndicator={setStepIndicator} selectedInfo={null} JSONBook={JSONBook}/>\n            <hr></hr>\n            {/* <button onClick={() => {saveTextbook(JSONBook)}}>저장</button> */}\n            <button onClick={() => {setJSONBook(loadTextbook())}}>퀵로드</button>\n            <br></br>\n            <hr></hr>\n            json파일 로드<input type=\"file\" name=\"json\" onChange={onJsonChange}/>\n            \n            <br></br>\n            <hr></hr>\n            <button onClick={downloadJson}> json 변환 </button>\n            <br></br>\n            <hr></hr>\n            이미지파일 한번에 업로드 : <input type=\"file\" name=\"myImage\" onChange={onFolderChange} directory=\"\" webkitdirectory=\"\" multiple=\"\"/>\n            {/* } */}\n        </div>\n    )\n\n}\n\nexport default TextbookSidebar","//Environment variables are injected in build-time (not accessible in development)\n\n// URL \n//export const API_URL = '127.0.0.1:8000';\n//export const API_PROTOCOL = \"http://\";\n//export const SOC_PROTOCOL = \"ws://\";\nexport const SOC_PROTOCOL = \"wss://\";\nexport const API_URL = 'www.topolar.co.kr';\n// export const API_URL = 'tonyscoding.com';\n// export const API_URL = 'kimbu.tonyscoding.com';\n// export const API_URL = 'tocol.info';\n// export const API_URL = 'localhost:8000';\n// export const API_URL = '192.168.0.13:8000';\n// export const API_URL = '192.168.1.3';\nexport const API_PROTOCOL = \"https://\";\n// export const API_PROTOCOL = \"http://\";\n//export const API_URL = 'tocol-444960480.ap-northeast-2.elb.amazonaws.com';\nexport const MEDIA_SERVER_URL = 'www.topolar.co.kr';\n// export const MEDIA_SERVER_URL = 'tonyscoding.com'\n// export const MEDIA_SERVER_URL = 'www.tocol.info'\n\n\n// TOCOL Price list\nexport const COURSE_BLACK = \"BLACK\";\nexport const COURSE_BLACK_CODE = \"BL\";\nexport const COURSE_NORMAL = \"NORMAL\";\nexport const COURSE_NORMAL_CODE = \"NO\";\n\nexport const STATIC_IP_ADDR = \"112.220.26.74\";\n// export const TURN_IP_ADDR = \"54.180.153.96\";\nexport const TURN_IP_ADDR = \"13.125.217.155\";\nexport const TURN_PASSWORD = \"yZ4d4eM3Cq\";\nexport const TURN_USERNAME = \"tonysacademy\";\n\n//  Classroom entry buffer time\nexport const CLASSROOM_ENTRY_TIME_BUFFER = 10;\n\n// Social Login Redirct uri\nexport const REDIRECT_URI_NAVER = \"/api/naver/social/login/callback/\";\nexport const REDIRECT_URI_FACEBOOK = \"/api/facebook/social/login/callback\";\nexport const REDIRECT_URI_KAKAO = \"/api/kakao/social/login/callback\";\nexport const REDIRECT_URI_GOOGLE = \"/api/google/social/login/callback\";\n\nexport const REDIRECT_URI_NAVER_AUTHENTICATE = \"/api/naver/social/authentication/callback/\";\nexport const REDIRECT_URI_FACEBOOK_AUTHENTICATE = \"/api/facebook/social/authentication/callback\";\nexport const REDIRECT_URI_KAKAO_AUTHENTICATE = \"/api/kakao/social/authentication/callback\";\nexport const REDIRECT_URI_GOOGLE_AUTHENTICATE = \"/api/google/social/authentication/callback\";\n\nconst NAVER_OAUTH_URL = \"https://nid.naver.com/oauth2.0/authorize\";\n// const FACEBOOK_OAUTH_URL = \"https://www.facebook.com/v8.0/dialog/oauth/\";\nconst KAKAO_OAUTH_URL = \"https://kauth.kakao.com/oauth/authorize\"\nconst GOOGLE_OAUTH_URL = \"https://accounts.google.com/o/oauth2/v2/auth\"\n\n\n// Social Login variables\nexport const SOCIAL_VARIABLES = {\n    naver: {\n        response_type: 'code',\n        client_id: API_URL==='www.topolar.co.kr'?'B2XvP5bEY2qQ3Aj2SpnJ':'qChFIQ5bqKM8sjPgJHT9',\n        redirect_uri: window.location.origin+REDIRECT_URI_NAVER,\n    },\n    // facebook: {\n    //     response_type: 'code',\n    //     client_id: '2390419097919426',\n    //     redirect_uri: window.location.origin+REDIRECT_URI_FACEBOOK,\n    //     scope: 'public_profile, email'\n    // },\n    kakao: {\n        response_type: 'code',\n        client_id: \"746bf258cf0d1ed175efddcbaf3608db\",\n        redirect_uri: window.location.origin + REDIRECT_URI_KAKAO,\n    },\n    google: {\n        response_type: 'code',\n        client_id: \"556593457930-1896adndgn3n09dis9o2bh413ocj427r.apps.googleusercontent.com\",\n        redirect_uri: window.location.origin + REDIRECT_URI_GOOGLE,\n        scope: \"https://www.googleapis.com/auth/userinfo.email\"\n    },\n    naverConnection: {\n        response_type: 'code',\n        client_id: API_URL==='www.topolar.co.kr'?'B2XvP5bEY2qQ3Aj2SpnJ':'qChFIQ5bqKM8sjPgJHT9',\n        redirect_uri: window.location.origin+REDIRECT_URI_NAVER_AUTHENTICATE,\n    },\n    // facebookConnection: {\n    //     response_type: 'code',\n    //     client_id: '2390419097919426',\n    //     redirect_uri: window.location.origin+REDIRECT_URI_FACEBOOK_AUTHENTICATE,\n    //     scope: 'public_profile, email'\n    // },\n    kakaoConnection: {\n        response_type: 'code',\n        client_id: \"746bf258cf0d1ed175efddcbaf3608db\",\n        redirect_uri: window.location.origin + REDIRECT_URI_KAKAO_AUTHENTICATE,\n    },\n    googleConnection: {\n        response_type: 'code',\n        client_id: \"556593457930-1896adndgn3n09dis9o2bh413ocj427r.apps.googleusercontent.com\",\n        redirect_uri: window.location.origin + REDIRECT_URI_GOOGLE_AUTHENTICATE,\n        scope: \"https://www.googleapis.com/auth/userinfo.email\"\n    },\n    naverOauth: NAVER_OAUTH_URL,\n    // facebookOauth: FACEBOOK_OAUTH_URL,\n    kakaoOauth: KAKAO_OAUTH_URL,\n    googleOauth: GOOGLE_OAUTH_URL\n}\n","import { render } from \"@testing-library/react\";\nimport { saveImage } from \"helpers/electronFileSystem\";\nimport React, { useState, useCallback, useRef, useContext } from \"react\";\nimport { ImageContext } from 'contexts/ImageContext';\nimport \"react-image-crop/dist/ReactCrop.css\";\n\nconst DisplayImage = (props) => {\n  const { imageLib, setImageLib, addImageLib } = useContext(ImageContext);\n\n  const imgRef = useRef(null);\n\n  const onLoad = useCallback((img) => {\n    imgRef.current = img;\n  }, []);\n\n  const toBase64 = file => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n});\n\n  const onImageChange = async event => {\n    const os = window.require('os');\n    if (event.target.files && event.target.files[0]) {\n      let img = event.target.files[0];\n      let folders, name;\n      console.log(\"platform: \",os.platform())\n      if (os.platform() === \"win32\") {\n        folders = img.path.split('\\\\');\n        name = folders[folders.length-2] + \"/\" + folders[folders.length-1];\n      } else {\n        folders = img.path.split('/');\n        name = folders[folders.length-2] + \"/\" + folders[folders.length-1];\n      }\n      \n      console.log(name);\n\n      const binary = await toBase64(img)\n      //saveImage(name, await toBase64(img)); // save binary image to storage\n      props.setSelectedImage(name)\n      addImageLib(name, binary);\n    }\n  };\n\n\n    return (\n      <div>\n        <div>\n          <div>\n            {/* {this.state.image !== null && \n            // <img src={`data:image/jpeg;base64,${this.state.image.substring(24)}`} />\n            <img src={this.state.image} />\n            } */}\n            \n            {/* <h1>Select Image</h1> */}\n            <input type=\"file\" name=\"myImage\" onChange={onImageChange} />\n            {/* <ReactCrop\n              src={upImg}\n              onImageLoaded={onLoad}\n              crop={crop}\n              onChange={(c) => setCrop(c)}\n              onComplete={(c) => setCompletedCrop(c)}\n            /> */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\nexport default DisplayImage;","import React from \"react\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport ReactQuill, { Quill } from \"react-quill\";\r\nimport { TextbookContext } from \"contexts/TextbookContext\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"assets/css/EditorStyles.css\";\r\n\r\nconst imageHandler = () => {\r\n\r\n}\r\n\r\n// Add sizes to whitelist and register them\r\nconst Size = Quill.import(\"formats/size\");\r\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\r\nQuill.register(Size, true);\r\n\r\n// Add fonts to whitelist and register them\r\nconst Font = Quill.import(\"formats/font\");\r\nFont.whitelist = [\r\n  \"arial\",\r\n  \"comic-sans\",\r\n  \"courier-new\",\r\n  \"georgia\",\r\n  \"helvetica\",\r\n  \"lucida\"\r\n];\r\nQuill.register(Font, true);\r\n\r\nconst Editor = (props) => {\r\n  const { stepIndex, itemIndex } = useContext(TextbookContext);\r\n  // useEffect(() => {\r\n  //   console.log(props.text)\r\n  // },[props.text])\r\n\r\n  const modules = {\r\n    toolbar: {\r\n      container: (\"#toolbar\"+stepIndex+itemIndex),\r\n    },\r\n  };\r\n\r\n  const formats = [\r\n    \"header\",\r\n    \"bold\",\r\n    \"italic\",\r\n    \"underline\",\r\n    \"strike\",\r\n    \"blockquote\",\r\n    \"size\",\r\n    \"color\",\r\n    \"list\",\r\n    \"bullet\",\r\n    \"indent\",\r\n    \"link\",\r\n    \"image\",\r\n    \"video\",\r\n    \"align\",\r\n    \"code\"\r\n  ];\r\n\r\n  return (\r\n    <div className=\"text-editor\">\r\n      \r\n      <ReactQuill\r\n        value={props.text || ''}\r\n        onChange={props.handleChange}\r\n        placeholder={props.placeholder}\r\n        modules={modules}\r\n        formats={formats}\r\n        theme=\"snow\"\r\n        style={{height:\"250px\"}}\r\n      />\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\n\r\nexport default Editor;","import React, {useContext} from \"react\";\r\nimport 'assets/css/CustomToolbar.css'\r\nimport { TextbookContext } from \"contexts/TextbookContext\";\r\n\r\nconst CustomHeart = () => <span>♥</span>;\r\n\r\nconst CustomToolbar = ({complete, changeFolder, step_no, idx}) => {\r\n\r\n  const { stepIndex, itemIndex } = useContext(TextbookContext);\r\n\r\n  // console.log(\"customToolbar\", stepIndex);\r\n  return (\r\n  <div id={\"toolbar\"+stepIndex+itemIndex}>\r\n    <span className=\"ql-formats\">\r\n      <select className=\"ql-font\"></select>\r\n      <select className=\"ql-size\"></select>\r\n    </span>\r\n      <button className=\"ql-bold\"></button>\r\n      <button className=\"ql-italic\"></button>\r\n      <select className=\"ql-color\">\r\n        <option value=\"blue\"></option>\r\n        <option value=\"#b103fc\"></option>\r\n        <option value=\"violet\"></option>\r\n        <option value=\"gold\"></option>\r\n        <option value=\"deepskyblue\"></option>\r\n        <option value=\"#00e317\"></option>\r\n        <option value=\"orange\"></option>\r\n        <option value=\"tomato\"></option>\r\n        <option value=\"black\"></option>\r\n      </select>\r\n      <select className=\"ql-background\"></select>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-list\" value=\"ordered\"></button>\r\n      <button className=\"ql-list\" value=\"bullet\"></button>\r\n      <button className=\"ql-indent\" value=\"-1\"></button>\r\n      <button className=\"ql-indent\" value=\"+1\"></button>\r\n      <button className=\"ql-code\"></button>\r\n    </span>\r\n    \r\n{/* \r\n    \r\n      <button style={{width:70}} onClick={complete}> \r\n        <div style={{margin:'10%', display:'inline-block', width:50, height:40}}> 수정완료 </div>\r\n      </button>\r\n\r\n      <button style={{width:100}} onClick={changeFolder}> \r\n        <div style={{margin:'10%', display:'inline-block', width:80, height:50}}> 교재폴더이름 </div>\r\n      </button> */}\r\n    \r\n  </div>\r\n)\r\n    };\r\n\r\nexport default CustomToolbar;","import React, { useState, useContext, useEffect, useCallback, useMemo } from 'react';\nimport '../assets/sass/Button.scss';\nimport classNames from 'classnames';\n\nconst Button = ({children, size, color, ref, fullWidth, fullHeight, autoHeight, style, className, displayNoneMobile, noRadius, hoverDisabled, outline, circled, active, noWrap, ...rest}) => {\n    const buttonEl = ref\n    return (\n        <button {...rest} style={style} className={classNames('Button', size, color, className, {fullWidth}, {fullHeight}, {autoHeight}, {displayNoneMobile}, {circled}, {outline}, {noRadius}, {hoverDisabled}, {active}, {noWrap})}>\n            {children}\n        </button>\n    )\n}\n\nButton.defaultProps = {\n    size: 'medium',\n    color: 'topolar',\n    style: null,\n    className: \"\"\n}\n\nexport default React.memo(Button);","import React, { useState } from 'react';\nimport classNames from \"classnames\";\n\nexport const Field = (props) => {\n\n    const [fieldinput, setFieldinput] = useState(false);\n    const doubleClick = () => {\n        setFieldinput(true);\n    }\n\n    const blurClick = () => {\n        setFieldinput(false);\n    }\n\n    return (\n      <div className=\"fieldfix\">\n        {\n            fieldinput ?\n            <textarea value = {props.value} onChange = {props.inputChange} onBlur = {blurClick} autoFocus rows=\"3\" cols=\"40\"/>\n            :\n            <div onDoubleClick = {doubleClick} className=\"fieldchange\">\n              {props.value === \"\" ? \"입력하세요\" : props.value}\n            </div>\n        }\n        {props.children}\n      </div>\n    )\n  }\n\n\nexport default Field;\n\n","import React from 'react';\n\nexport const CodeLanguageSelectBox = (props) => {\n\n  const handleChange = (e) => {\n\t\t// event handler\n\t\tconsole.log(e.target.value);\n    props.setCodeLanguage(e.target.value);\n\t};\n\n\n\treturn (\n\t\t<select onChange={handleChange}>\n\t\t\t{props.options.map((option) => (\n\t\t\t\t<option\n\t\t\t\t\tvalue={option.value}\n\t\t\t\t\tdefaultValue={props.defaultValue === option.value}\n\t\t\t\t>\n\t\t\t\t\t{option.name}\n\t\t\t\t</option>\n\t\t\t))}\n\t\t</select>\n\t);\n};","import React, {useEffect, useMemo, useContext} from 'react'\nimport DisplayImage from './DisplayImage';\nimport reactHtmlParser from 'react-html-parser';\nimport { ImageContext } from 'contexts/ImageContext';\n\nexport const ImageContent = ({components_item, index, hoverItemIndex, setHoverItemIndex, loadImage, count_for_key, selectedImage, setSelectedImage, ButtonGroup}) => {\n  const { imageLib, setImageLib, addImageLib } = useContext(ImageContext);\n  //const image = useMemo(()=>loadImage(components_item.src),[components_item]);\n  const image = useMemo(()=>imageLib.get(components_item.src),[components_item, imageLib]);\n  // console.log(\"dirname : \",__dirname)\n  return (\n    <div key={components_item.src+count_for_key} onMouseEnter={() => {setHoverItemIndex(index)}} onMouseLeave={() => {setHoverItemIndex(null)}}>\n      {/* <div\n          style={{\n            backgroundSize: 'contain',\n            backgroundPosition: 'center',\n            backgroundRepeat: 'no-repeat',\n            backgroundImage: `url('file://Users/eui-chan/Documents/tonysCoding/textbook_editor2/src/textbook/${components_item.src}')`,\n          }}\n          className=\"full-screen-img\"\n        /> */}\n        {image === null || image === undefined ? \n        <>\n        <h6>이미지를 찾을 수 없음 {components_item.src}</h6>\n        <h6>{components_item.src} 선택하여 업로드 : </h6>\n        <DisplayImage selectedImage={selectedImage} setSelectedImage={setSelectedImage}/>\n        </> :\n        <img src={image} alt={components_item.name}/>\n        }\n        {/* <img src={URL.createObjectURL(\"/Users/eui-chan/Documents/tonysCoding/textbook_simulator_edited/textbook/dino1/fillRect.png\")} alt={components_item.name} width=\"300px\" height=\"300px\"/> */}\n        {/* <img src={require(\"../../textbook/\"+components_item.src)} alt={components_item.name}/> */}\n        {/* <DisplayImage src={\"/Users/eui-chan/Documents/tonysCoding/textbook_simulator_edited/textbook/dino1/fillRect.png\"}/> */}\n        {/* <RenderImage src={\"file://Users/eui-chan/Documents/tonysCoding/textbook_simulator_edited/textbook/dino1/fillRect.png\"}/> */}\n        \n        {/* <button onClick={readFile}>이미지 저장</button> */}\n        {/* <button onClick={selectFolder}>선택2</button> */}\n        <br />\n        <b> {reactHtmlParser(components_item.name? components_item.name:null)} </b>\n        <br />\n        {hoverItemIndex === index && <ButtonGroup index={index}/>}\n        \n    </div> \n  );\n}","import React, { useState, useContext, useEffect, useCallback, useMemo, useRef } from 'react';\nimport classNames from 'classnames';\nimport '../assets/sass/Modal.scss';\nimport closeBtn from '../assets/root_img/Modal/BtnClose.svg';\n\nconst Modal =({children, isOpen=false, size=\"sm\", toggle=()=>{}, subHeader=\"\", header=\"\", parentOverflowDisabled=false, style=null, innerStyle=null}) => {\n    const modalBodyEl = useRef(null)\n\n    const escape = useCallback((e) => {\n        if(e.key===\"Escape\") {\n            modalBodyEl.current.classList.remove('isOpen')\n            setTimeout(() => {\n                document.getElementById('root').removeAttribute('style')\n                toggle()\n            }, 300);\n        }\n    }, [isOpen])\n\n    useEffect(() => {\n        if(isOpen){\n            if(parentOverflowDisabled) document.getElementById('root').style.overflow=\"hidden\"\n            else document.getElementById('root').style.overflow='unset'\n            document.addEventListener('keydown', escape)\n        }\n\n        return () => document.removeEventListener('keydown', escape)\n    }, [isOpen])\n\n    return (\n        <div style={style} className={classNames('fixed-modal-bg', isOpen ? 'isOpen' : 'notOpen')}>\n            <div ref={modalBodyEl} style={innerStyle} className={classNames('fixed-modal', size, {isOpen})}>\n                <div className=\"flex justify-content-between mb-2\">\n                    <div>\n                        <div className=\"sub-header\">\n                            {subHeader}\n                        </div>\n                        <div className=\"header\" style={{textAlign: 'left'}}>\n                            {header}\n                        </div>\n                    </div>\n                    <img style={{cursor: 'pointer'}} src={closeBtn} onClick={() => {\n                        modalBodyEl.current.classList.remove('isOpen')\n                        setTimeout(() => {\n                            document.getElementById('root').removeAttribute('style')\n                            toggle()\n                        }, 300);\n                    }} />\n                </div>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(Modal);","import React, { useCallback, useEffect, useRef, useState, useContext, useMemo } from 'react';\nimport 'assets/sass/Curriculum/TextbookBrowser.scss'\nimport { API_URL, API_PROTOCOL } from '../../config';\nimport reactHtmlParser from 'react-html-parser';\n\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter'\nimport {materialDark, materialLight, vs, duotoneLight} from 'react-syntax-highlighter/dist/esm/styles/prism'\n\nimport Markdown from 'react-markdown';\nimport rehypeRaw from 'rehype-raw';\nimport gfm from 'remark-gfm';\n\nimport {RenderImage} from './RenderImage';\nimport DisplayImage from './DisplayImage';\nimport {saveImage, loadImage} from '../../helpers/electronFileSystem'\nimport { TextbookContext } from 'contexts/TextbookContext';\n\nimport Editor from 'components/textbooks/Editor';\nimport CustomToolbar from 'components/textbooks/CustomToolbar'\n\nimport Button from 'components/Button';\nimport { Field } from 'components/textbooks/Field';\nimport { CodeLanguageSelectBox } from './CodeLanguageSelectBox';\n\nimport Modal from 'components/Modal'\nimport { ImageContent } from 'components/textbooks/ImageContent';\n\n\nconst URL = API_PROTOCOL + API_URL;\n\nconst TextbookContentView = ({\n    data,\n    JSONLoading,\n    stepIndex,\n\n}) =>{\n    // const [image, setImage] = useState(null);\n    const[text, setText] = useState(\"\");\n    const[code, setCode] = useState(\"더블클릭하여 code 입력\");\n    const[codeLanguage, setCodeLanguage] = useState(\"python\");\n    const[selectedImage, setSelectedImage] = useState(null);\n    const [hoverItemIndex, setHoverItemIndex] = useState(null);\n    const[imageModalVisible, setImageModalVisible] = useState(false);\n    const { addDescription, addImage, addCode, addTable, deleteDescription } = useContext(TextbookContext);\n\n    useEffect(() => {\n      console.log(\"selectedImageName : \", selectedImage);\n    },[selectedImage])\n\n    const readFile = () => {\n      const fs = window.require('fs');\n\n      const dir = \"/Users/eui-chan/Documents/tonysCoding/textbook_simulator_edited/textbook/guessNumber\"\n      const files = fs.readdirSync(dir)\n\n      for (const file of files) {\n        console.log(file)\n      }\n\n      // fs.readFile('/Users/eui-chan/Documents/tonysCoding/textbook_simulator_edited/textbook/guessNumber/input.gif', function(err, data) {\n      //   console.log(data);\n      //   setImage(Buffer.from(data).toString('base64'));\n      //   console.log(Buffer.from(data).toString('base64'))\n      // })\n    }\n\n\n      // const files = fs.readdirSync(dir)\n\n      // for (const file of files) {\n      //   console.log(file)\n      // }\n    \n\n    const selectFolder = async () => {\n      const dirHandle = await window.showDirectoryPicker();\n      console.log(dirHandle);\n    }\n\n    const handleCode = (e) => {\n      setCode(e.currentTarget.value);\n    }\n\n    const handleText = (text) => {\n      setText(text);\n    }\n\n    const ButtonGroup = ({index}) => (\n      <div className={\"body-buttonGroup\"}>\n        <Button size=\"small\" type=\"fill\" color=\"black\" onClick={()=>{addDescription(index+1, text)}}>desc 추가</Button>\n        <Button size=\"small\" type=\"fill\" color=\"black\" onClick={()=>{addImage(index+1, selectedImage)}}>image 추가</Button>\n        <Button size=\"small\" type=\"fill\" color=\"black\" onClick={()=>{addCode(index+1, code, codeLanguage)}}>code 추가</Button>\n        {/* <Button size=\"small\" type=\"fill\" color=\"black\" onClick={()=>{addTable(index+1, text)}}>table 추가</Button> */}\n        {index > -1 && <Button size=\"small\" type=\"fill\" color=\"red\" onClick={()=>{deleteDescription(index)}}>제거</Button>}\n        \n      </div>\n      \n    )\n\n    const parseData = (data) =>{\n        const {title, components, description_title} = data;\n\n        let count_for_key = 0;\n\n        const step_item_descriptions = (components && components.length>0)?components.map((components_item, index)=>{\n            count_for_key += 1;\n            let type = components_item.type;\n            if (type === \"desc\"){\n                count_for_key += 1;\n                return (\n                    <div className={\"body-desc\"} key={components_item.description+count_for_key} onMouseEnter={() => {setHoverItemIndex(index)}} onMouseLeave={() => {setHoverItemIndex(null)}}>\n                        <div>\n                            <Markdown children={components_item.description} rehypePlugins={[rehypeRaw]} />\n                        </div>\n                        {hoverItemIndex === index && <ButtonGroup index={index}/>}\n                        \n                    </div>\n                );\n            }\n            else if (type === \"table\"){\n                count_for_key += 1;\n                return(\n                <div className={\"body-table\"} key={components_item.description+count_for_key} onMouseEnter={() => {setHoverItemIndex(index)}} onMouseLeave={() => {setHoverItemIndex(null)}}>\n                    <Markdown \n                        children={components_item.description} \n                        remarkPlugins={[[gfm, {borderWidth: \"1px\"}]]}\n                    />\n                    {hoverItemIndex === index && <ButtonGroup index={index}/>}\n                </div>\n                );\n            }\n            else if (type === \"code\"){\n                count_for_key += 1;\n                return (\n                    <div className={\"body-code\"} key={components_item.code+count_for_key} onMouseEnter={() => {setHoverItemIndex(index)}} onMouseLeave={() => {setHoverItemIndex(null)}}>\n                    <Markdown\n                        children={components_item.code}\n                        components={{\n                        code({node, inline, className, children, ...props}) {\n                            const match = /language-(\\w+)/.exec(className || '')\n                            return !inline && match ? (\n                            <SyntaxHighlighter\n                                children={String(children).replace(/\\n$/, '')}\n                                style={materialLight}\n                                language={match[1]}\n                                PreTag=\"div\"\n                                {...props}\n                            />\n                            ) : (\n                            <code className={className} {...props}>\n                                {children}\n                            </code>\n                            )\n                        }\n                        }}\n                    />\n                    {hoverItemIndex === index && <ButtonGroup index={index}/>}\n                    </div>\n                );\n            }\n            else if (type === \"image\") {\n                count_for_key += 1;\n                return (\n                  <>\n                  <ImageContent\n                    components_item={components_item} \n                    index={index} \n                    hoverItemIndex={hoverItemIndex}\n                    setHoverItemIndex={setHoverItemIndex} \n                    loadImage={loadImage} \n                    count_for_key={count_for_key} \n                    selectedImage={selectedImage} \n                    setSelectedImage={setSelectedImage}\n                    ButtonGroup={ButtonGroup}\n                  />\n                  \n                  </>\n                )\n            }\n        }):null;\n        \n        const card1 = (\n            <div className={\"textbook-container\"}>\n                <div className={\"textbook-header\"}>\n                    <div className={\"textbook-title\"}> \n                    {title}\n                    </div>\n                </div>\n                \n                <div className=\"textbook-body\">\n                <ButtonGroup index={-1}/>\n                    {reactHtmlParser(description_title)}\n                    {step_item_descriptions}\n                </div>\n            </div>\n        );\n        return (\n            <div>\n                {card1}\n            </div>\n                \n        );\n    }\n\n    if (JSONLoading){\n        return null;\n    }\n    if (!data){\n        return null;\n    }\n    const OPTIONS = [\n      { value: \"python\", name: \"python\" },\n      { value: \"cpp\", name: \"cpp\" },\n      { value: \"java\", name: \"java\" },\n      { value: \"javascript\", name: \"javascript\" },\n    ];\n    \n    return (\n        <div className=\"textbook-content-view\">\n            {/* <Modal isOpen={imageModalVisible} toggle={setImageModalVisible} subHeader=\"b\" header=\"a\">\n              <DisplayImage selectedImage={selectedImage} setSelectedImage={setSelectedImage}/>\n            </Modal> */}\n            \n            {parseData(data)}\n            <div style={{marginTop: \"50px\"}}>\n              <hr></hr>\n              이미지 선택 : \n              {/* <button onClick={() => {setImageModalVisible(true)}}>modal</button> */}\n              <DisplayImage selectedImage={selectedImage} setSelectedImage={setSelectedImage}/>\n              <hr></hr>\n              <CustomToolbar/>\n              <Editor placeholder={\"이곳에 desc 입력\"} text={text} handleChange={handleText}/>\n              <hr></hr>\n              <CodeLanguageSelectBox options={OPTIONS} defaultValue=\"python\" setCodeLanguage={setCodeLanguage}></CodeLanguageSelectBox>;\n              <Field\n                value={code}\n                inputChange={handleCode}\n                active = {code}\n              />\n              <br></br>\n            </div>\n        </div>\n    )\n\n}\n\nexport default TextbookContentView","import React, { useCallback, useEffect, useRef, useState, useMemo, useReducer } from 'react';\n\n// import { useSelector, useDispatch, shallowEqual } from 'react-redux';\n// import useApi from 'components/Hooks/useApi';\n\n// import { getTextbook, getJSONTextbook } from 'redux/actions/api_textbook';\n// import { getMyStudentInfo } from 'redux/actions/api_studentinfo';\n// import { API_URL, CLASSROOM_ENTRY_TIME_BUFFER, SOC_PROTOCOL } from \"../../../config\";\n\nimport 'assets/sass/Curriculum/TextbookSidebar.scss';\nimport 'assets/sass/Classroom/NewClassroom.scss';\nimport ToolBar from \"./ToolBar\";\nimport ClassroomFooter from \"./ClassroomFooter\";\nimport ClassroomHeader from \"./ClassroomHeader\";\n\n\nimport TextbookSidebar from 'components/textbooks/TextbookSidebar';\n//import { showToast } from 'helpers/toast';\nimport TextbookContentView from 'components/textbooks/TextbookContentView';\n\nimport { DefaultTextbook }  from \"./DefaultTextbook\";\n//import ClassroomEventPopup from '../ClassroomEventPopup';\n\nimport { TextbookContext } from \"contexts/TextbookContext\";\nimport { ImageContext } from \"contexts/ImageContext\";\n\nimport { saveTextbook, loadTextbook } from \"helpers/electronFileSystem\";\n\nimport tutorial from \"textbook/Textbook_lv0_0_tutorial/Textbook_lv0_0_tutorial.json\";\n\nconst NewClassroom = () =>{\n    //===========================================USE API=============================================//\n    // const [StudentInfoLoading, StudentInfoResolved, StudentInfoError, getStudentInfo] = useApi(getMyStudentInfo);\n    // const [TextbookLoading, Textbook, TextbookError, getCurrentTextbook] = useApi(getTextbook);\n    // const [JSONLoading, JSONBook, JSONError, getJSONBook] = useApi(getJSONTextbook);\n    \n    //===========================================USE SELECTOR=============================================//\n    // const studentInfo = useSelector(state=>state.api_studentinfo.studentinfo)\n    // const auth = useSelector(state => state.auth, shallowEqual);\n    // const textbook = useSelector(state => state.api_textbook.textbook, shallowEqual);\n\n    //===========================================USE STATE=============================================//\n    \n    const [Textbook, setTextbook] = useState(null);\n\n    const [sidebarOpen, setSidebarOpen] = useState(false);\n\n    const [stepIndicator, setStepIndicator] = useState(0);\n    const [stepsList, setStepsList] = useState([]);\n    const [stepsListLength, setStepsListLength] = useState(null);\n    \n    const [JSONBook, setJSONBook] = useState(tutorial);\n\n    const [stepIndex, setStepIndex] = useState(0);\n    const [itemIndex, setItemIndex] = useState(0);\n    const [ignored, forceUpdate] = useReducer(x => x + 1, 0);\n\n    const [imageLib, setImageLib] = useState(new Map());\n\n    //===========================================USE EFFECT=============================================//\n    // useEffect(()=>{\n    //     if(!studentInfo){\n    //         getStudentInfo();\n    //     }\n    //     // setDefaultJSON()\n    // },[]);\n\n    // useEffect(()=>{\n    //     if(studentInfo && studentInfo.current_textbook){\n    //         setTextbookId(studentInfo.current_textbook.id);\n    //         getJSONBook(studentInfo.current_textbook.file);\n    //         setLastTextbook(studentInfo.current_textbook);\n    //     }\n    //     else if (studentInfo && !studentInfo.current_textbook){\n    //         getCurrentTextbook(0);\n    //     }\n    // },[JSON.stringify(studentInfo)])\n\n    // useEffect(()=>{\n    //     if(TextbookError){\n    //         showToast('', TextbookError, 'danger')\n    //     }\n    // },[TextbookError])\n    \n    // useEffect(()=>{\n    //     if(Textbook){\n    //         if(Textbook.file.textbook_type !==2){\n    //             //showToast('', \"지원하지 않는 교재 형식입니다\", 'danger');\n    //         }\n    //         else{\n    //             setTextbookId(Textbook.id);\n    //             getJSONBook(Textbook.file.id);\n    //             if(fromTeacherTrigger){\n    //                 setLastTextbook(Textbook);\n    //                 setStepIndicator(0);\n    //                 setTrigger(false);\n    //             }\n    //         }\n    //     }\n    // },[JSON.stringify(Textbook)])\n\n    const movePage = () => {\n      let steps_list = [];\n      JSONBook.textbook_contents.forEach((step)=>{\n      //JSONBook.textbook_content.textbook_contents.forEach((step)=>{\n          steps_list = steps_list.concat(step.step_items);\n      });\n      setStepsList(steps_list);\n      setStepsListLength(steps_list.length);\n    }\n    \n    useEffect(()=>{\n      movePage();\n      forceUpdate();\n    },[stepIndicator, JSONBook])\n\n    //===========================================FUNCTIONS=============================================//\n\n    // const textbookOnClick = (info)=>{\n    //     if (info.textbook_id&&(info.textbook_id!==textbookId)){\n    //         setStepIndicator(0);\n    //         setStepsList([]);\n    //         getCurrentTextbook(info.textbook_id);\n    //     }\n    // }\n\n    // const setDefaultJSON = () =>{\n        // TO DO IN FUTURE\n    // }\n\n\n\n    // if (!studentInfo){\n    //     return null;\n    // }\n\n    const setIndex = (stepIndex, itemIndex) => {\n      setStepIndex(stepIndex);\n      setItemIndex(itemIndex);\n    }\n\n    const addStep = (stepTitle, stepIndex) => {\n      let newBook = JSONBook;\n      for(let i = stepIndex; i < newBook.textbook_contents.length; i++) {\n        newBook.textbook_contents[i].step_no = i+1;\n      }\n\n      newBook.textbook_contents.splice(stepIndex, 0, {\n        \"step_title\": stepTitle,\n        \"step_no\": stepIndex,\n        \"step_items\": []\n      })\n      console.log(newBook)\n\n      setJSONBook(newBook);\n      saveTextbook(newBook);\n      forceUpdate();\n    }\n\n    const addItem = (itemTitle, stepIndex, itemIndex) => {\n      let newBook = JSONBook;\n      newBook.textbook_contents[stepIndex].step_items.splice(itemIndex, 0, {\n        \"title\": itemTitle,\n        \"tags\": [],\n        \"collapse\": false,\n        \"components\": []\n      })\n\n      console.log(newBook)\n\n      setJSONBook(newBook);\n      saveTextbook(newBook);\n      forceUpdate();\n    }\n\n    const deleteStep = (stepIndex) => {\n      let newBook = JSONBook;\n      for(let i = stepIndex+1; i < newBook.textbook_contents.length; i++) {\n        newBook.textbook_contents[i].stepIndex = i-1;\n      }\n\n      newBook.textbook_contents.splice(stepIndex, 1)\n      console.log(newBook)\n\n      setJSONBook(newBook);\n      saveTextbook(newBook);\n      forceUpdate();\n    }\n\n    const deleteItem = (stepIndex, itemIndex) => {\n      let newBook = JSONBook;\n      newBook.textbook_contents[stepIndex].step_items.splice(itemIndex, 1)\n\n      console.log(newBook)\n\n      setJSONBook(newBook);\n      saveTextbook(newBook);\n      forceUpdate();\n    }\n\n    const addDescription = (index, text) => {\n      let newBook = JSONBook;\n      newBook.textbook_contents[stepIndex].step_items[itemIndex].components.splice(index, 0, {\n        \"type\": \"desc\",\n        \"description\": text\n      })\n\n      console.log(newBook)\n\n      setJSONBook(newBook);\n      saveTextbook(newBook);\n      forceUpdate();\n    }\n\n    const addImage = (index, name) => {\n      let newBook = JSONBook;\n      if(name === null) {\n        return\n      }\n      newBook.textbook_contents[stepIndex].step_items[itemIndex].components.splice(index, 0, {    \n        \"type\": \"image\",\n        \"name\": \"\",\n        \"src\": name\n      })\n\n      console.log(newBook)\n\n      setJSONBook(newBook);\n      saveTextbook(newBook);\n      forceUpdate();\n    }\n\n    const addCode = (index, text, language) => {\n      let newBook = JSONBook;\n      newBook.textbook_contents[stepIndex].step_items[itemIndex].components.splice(index, 0, {\n        \"type\": \"code\",\n        \"code\": \"~~~\" + language + \" \\n\" + text + \"\\n ~~~\"\n      })\n\n      console.log(newBook)\n\n      setJSONBook(newBook);\n      saveTextbook(newBook);\n      forceUpdate();\n    }\n\n    const addTable = (index) => {\n      let newBook = JSONBook;\n    }\n\n    const deleteDescription = (index) => {\n      let new_textbook = JSONBook\n      new_textbook.textbook_contents[stepIndex].step_items[itemIndex].components.splice(index,1);\n      setTextbook(new_textbook);\n      forceUpdate();\n    }\n\n    const addImageLib = (key, value) => {\n      console.log(\"image added\", key);\n      setImageLib((prev) => new Map([...prev, [key, value]]));\n    };\n\n    const textbookContextValue = useMemo(() => ({ \n      stepIndex, itemIndex, setIndex, addDescription, addImage, addCode, addTable, deleteDescription, addStep, deleteStep, addItem, deleteItem}\n      ), [stepIndex, itemIndex, setIndex, addDescription, addImage, addCode, addTable, deleteDescription, addStep, deleteStep, addItem, deleteItem]);\n\n    const imageContextValue = useMemo(() => ({ \n      imageLib, setImageLib, addImageLib\n    }),[imageLib, setImageLib, addImageLib]);\n\n    if(stepsList.length === 0) {\n      return null;\n    }\n    return (\n        <>\n        {/* {screenSize==='desktop' && \n        <ClassroomEventPopup\n            isOpen={isCouponModalOpen}\n            toggle={()=>setIsCouponModalOpen(!isCouponModalOpen)}\n        >\n        </ClassroomEventPopup>\n        } */}\n            \n            <div className=\"new-classroom fit-app\">\n                {/* <ClassroomHeader firstName={\"교재 제작 툴\"}/> */}\n                <ImageContext.Provider value={imageContextValue}>\n                  <TextbookContext.Provider value={textbookContextValue}>\n                    <TextbookSidebar \n                        toggleSidebar={setSidebarOpen}\n                        textbookOnClickCallback={null}\n                        isOpen = {sidebarOpen}\n                        currentTextbook = {Textbook}\n                        JSONBook = {JSONBook}\n                        setJSONBook = {setJSONBook}\n                        stepIndicator = {stepIndicator}\n                        setStepIndicator = {setStepIndicator}\n                        lastTextbook={Textbook}/>\n                    <div className=\"classroom-textbook-header\">\n                        <span onClick={()=>{setSidebarOpen(true)}} className=\"material-icons-outlined textbook-sidebar-toggle\">open</span>\n                        {Textbook? Textbook.name : null}\n                    </div>\n                    {/* <ToolBar history={null} getTextbook={null} setTrigger={setTrigger} toggleCouponModal={()=>setIsCouponModalOpen(!isCouponModalOpen)} /> */}\n                    <ClassroomFooter maxIndex={stepsListLength} stepIndicator={stepIndicator} setStepIndicator={setStepIndicator}/>\n                    {<TextbookContentView JSONLoading={false} data={stepsList? stepsList[stepIndicator] : null} />}\n                    \n                  </TextbookContext.Provider>\n                </ImageContext.Provider>\n            </div>\n        </>\n    )\n}\n\nexport default NewClassroom","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport NewClassroom from 'components/classroom'\n\nfunction App() {\n  return (\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.tsx</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React!!!\n    //     </a>\n    //   </header>\n    // </div>\n    <NewClassroom/>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}